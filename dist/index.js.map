{"version":3,"sources":["../src/index.ts"],"names":["app","PORT","process","env","prisma","PrismaClient","use","express","json","urlencoded","extended","static","path","join","__dirname","get","req","res","sendFile","name","params","fighterFindManyArg","where","contains","data","fighter","findMany","send","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAG,uBAAZ;AACA,MAAMC,IAAS,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAtC;AACA,MAAMG,MAAM,GAAG,IAAIC,oBAAJ,EAAf;AAEAL,GAAG,CAACM,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAR,GAAG,CAACM,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAV,GAAG,CAACM,GAAJ,CAAQC,iBAAQI,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AACAd,GAAG,CAACM,GAAJ,CACE,cADF,EAEEC,iBAAQI,MAAR,CAAeC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAAf,CAFF;AAOAd,GAAG,CAACe,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAeC,GAAf,KAAiC;AAC5CA,EAAAA,GAAG,CAACC,QAAJ,CAAaN,cAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAb;AACD,CAFD;AAMAd,GAAG,CAACe,GAAJ,CAAQ,gBAAR,EAA0B,OAAOC,GAAP,EAAqBC,GAArB,KAAuC;AAC/D,QAAM;AAAEE,IAAAA;AAAF,MAAWH,GAAG,CAACI,MAArB;AACA,QAAMC,kBAA8C,GAAG;AACrDC,IAAAA,KAAK,EAAE;AACLH,MAAAA,IAAI,EAAE;AACJI,QAAAA,QAAQ,EAAEJ;AADN;AADD;AAD8C,GAAvD;AAOA,QAAMK,IAAI,GAAG,MAAMpB,MAAM,CAACqB,OAAP,CAAeC,QAAf,CAAwBL,kBAAxB,CAAnB;AACAJ,EAAAA,GAAG,CAACU,IAAJ,CAASH,IAAT;AACD,CAXD;AAaAxB,GAAG,CAAC4B,MAAJ,CAAW1B,OAAO,CAACC,GAAR,CAAYF,IAAvB,EAA6B,MAAM;AACjC4B,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwB5B,OAAO,CAACC,GAAR,CAAYF,IAAK,EAAtD;AACD,CAFD","sourcesContent":["import express, { Request, Response } from 'express'\nimport 'dotenv/config'\nimport path from 'path'\nimport { PrismaClient, Prisma } from '@prisma/client'\n\nconst app = express()\nconst PORT: any = process.env.PORT || 4004\nconst prisma = new PrismaClient()\n\napp.use(express.json())\napp.use(express.urlencoded({ extended: false }))\napp.use(express.static(path.join(__dirname, './../src/views')))\napp.use(\n  '/favicon.ico',\n  express.static(path.join(__dirname, './../src/views/favicon.ico'))\n)\n\n// Home Page (Not the focus of this project.)\n\napp.get('/', (req: Request, res: Response) => {\n  res.sendFile(path.join(__dirname, './../src/views/index.html'))\n})\n\n// CRUD Operations\n\napp.get('/fighter/:name', async (req: Request, res: Response) => {\n  const { name } = req.params\n  const fighterFindManyArg: Prisma.FighterFindManyArgs = {\n    where: {\n      name: {\n        contains: name\n      }\n    }\n  }\n  const data = await prisma.fighter.findMany(fighterFindManyArg)\n  res.send(data)\n})\n\napp.listen(process.env.PORT, () => {\n  console.log(`listening in on port: ${process.env.PORT}`)\n})\n"],"file":"index.js"}